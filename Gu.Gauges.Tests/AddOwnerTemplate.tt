<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
        public static readonly DependencyProperty <#=PropName#>Property = <#=OldOwner#>.<#=PropName#>Property.AddOwner(
            typeof(<#=NewOwner#>),
            new FrameworkPropertyMetadata(default(<#=PropType#>), FrameworkPropertyMetadataOptions.AffectsRender));
			
        public <#=PropType#> <#=PropName#>
        {
            get { return (<#=PropType#>)this.GetValue(<#=PropName#>Property); }
            set { this.SetValue(<#=PropName#>Property, value); }
        }
<#+
        public string OldOwner { get; set; }
        public string NewOwner { get; set; }
        public string PropName { get; set; }
        public string PropType { get; set; }

		public string WriteCode(string oldOwner, string newOwner, string propName, string propType)
        {
            OldOwner = oldOwner;
            NewOwner = newOwner;
            PropName = propName;
			PropType = propType;
            GenerationEnvironment.Clear();
            return TransformText();
        }
#>